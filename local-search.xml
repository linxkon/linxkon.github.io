<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>北京人工智能行业薪资大揭秘</title>
    <link href="/2024/05/03/%E5%8C%97%E4%BA%AC%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E8%A1%8C%E4%B8%9A%E8%96%AA%E8%B5%84%E5%A4%A7%E6%8F%AD%E7%A7%98/"/>
    <url>/2024/05/03/%E5%8C%97%E4%BA%AC%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E8%A1%8C%E4%B8%9A%E8%96%AA%E8%B5%84%E5%A4%A7%E6%8F%AD%E7%A7%98/</url>
    
    <content type="html"><![CDATA[<h1 id="北京2024人工智能行业薪资大揭秘"><a href="#北京2024人工智能行业薪资大揭秘" class="headerlink" title="北京2024人工智能行业薪资大揭秘"></a><strong>北京2024人工智能行业薪资大揭秘</strong></h1><h3 id="1-数据说明"><a href="#1-数据说明" class="headerlink" title="1.数据说明"></a>1.数据说明</h3><p>数据时间:<code>2024年5月</code></p><p>数据来源:**BOSS直聘,爬取北京市各区[<code>算法工程师|人工智能</code>]岗位数据7534条(多次爬取结果)</p><p>**数据清洗:**提取岗位内容中包含<code>[人工智能|算法|nlp|cv]</code>的内容,并执行去重操作,得到岗位数据2208个.</p><h3 id="2-薪资分析"><a href="#2-薪资分析" class="headerlink" title="2.薪资分析"></a>2.薪资分析</h3><p><strong>薪资上限，星辰大海般的梦想</strong>：<br>首先，让人眼前一亮的是薪资上限——竟然高达<strong>1800k（年薪）</strong>！这意味着在这个行业，如果你拥有出色的才华和丰富的经验，那么年薪百万的梦想并非遥不可及。当然，这样的高薪也对应着极高的工作要求和挑战。</p><p><strong>薪资下限，无良公司真没下限</strong>：<br>而对于那些刚刚步入人工智能行业的新人或者初入这个领域的小伙伴们来说，薪资下限为24k（年薪）,在北京还不够房租的,试问这些无良公司,你们的良心不会痛吗。</p><p><strong>平均年薪，舒适圈的魅力</strong>：<br>说到最吸引人的部分，莫过于平均年薪了。北京人工智能行业的平均年薪高达<strong>400k</strong>左右，这真是一个赏心悦目的数字,另外年薪的众数和中位数都是<strong>360k</strong>,不知道屏幕前的你达到平均水平没有。</p><p><strong>人工智能岗位平均年薪与下限年薪对比:</strong></p><h3 id="3-岗位要求"><a href="#3-岗位要求" class="headerlink" title="3.岗位要求"></a>3.岗位要求</h3><p>人工智能行业这么卷,是不是得<code>985\211起步,研究生占半数</code>呢?我们用数据来说话:</p><p>根据统计的2208个岗位数据来看,研究生占比30.4%,反而是<strong>本科生占据了大多数</strong>,占比达<strong>64.9%</strong>,本科生才是人工智能产业的中坚力量.不过AI行业的起步门槛是真高,大专和学历不限的岗位占比仅<strong>2.4%.</strong></p><p>在岗位经验来看,<strong>人工智能行业的包容性还是比较大的</strong>,经验不限的占到了17.91%(越缺人才的行业,这个指标越高),3-5年的岗位占比超过一半(鲜明的新兴行业).现在来看,又是招兵买马又是百模大战,<strong>人工智能的时代才刚开始 .</strong></p><h3 id="4-薪资与学历和经验的关系"><a href="#4-薪资与学历和经验的关系" class="headerlink" title="4.薪资与学历和经验的关系"></a>4.薪资与学历和经验的关系</h3><h4 id="4-1-学历VS薪资"><a href="#4-1-学历VS薪资" class="headerlink" title="4.1 学历VS薪资"></a>4.1 学历VS薪资</h4><p><strong>大专小鲜肉</strong>：虽然起步稍低，但凭借着一股不服输的劲头，也能拿到251k的薪资，证明了在人工智能领域，实力非常的重要。</p><p><strong>本科高手</strong>：他们像是中流砥柱，稳稳地占据了薪资的中上游，379k的薪资，是对他们扎实基础和广泛知识的认可。</p><p><strong>硕士精英</strong>：他们在学历上更上一层楼，薪资也随之水涨船高，416k的薪资，是他们辛勤付出的回报。</p><p><strong>博士大佬</strong>：一出场就自带光环，稳稳地站在了薪资的金字塔尖，462k的薪资，仿佛在告诉大家：“知识就是力量，学历就是金钱！”</p><p><strong>学历不限</strong>：这个神秘的角色，似乎不受学历的束缚，凭借着自己的独特技能和经验，也能轻松拿到385k的薪资，可谓是“英雄不问出处”。</p><h3 id="4-2-经验VS薪资"><a href="#4-2-经验VS薪资" class="headerlink" title="4.2 经验VS薪资"></a>4.2 经验VS薪资</h3><p><strong>1-3年新鲜人儿</strong>：<br>初出茅庐的你，薪资322k，够你喝不少星巴克了！但别停步，未来更精彩！</p><p><strong>1年以内小鲜肉</strong>：<br>应届生们，你们薪资333k，起点不错！不过这只是起点，挑战还在后头哦！</p><p><strong>3-5年小有成就</strong>：<br>404k的薪资，帝都<strong>租房</strong>没问题！继续加油，成为公司顶梁柱！</p><p><strong>5-10年资深玩家</strong>：<br>资深大佬，458k薪资，生活舒适还能追梦！多年打拼，果然值得！</p><p><strong>10年以上大佬级人物</strong>：<br>传奇大佬，467k薪资，人生赢家！人脉经验都丰富，这钱你应得！</p><p><strong>在校&#x2F;应届小白</strong>：<br>小白们，150k只是开始，努力学习，未来可期！</p><p><strong>经验不限的小伙伴</strong>：<br>无门槛岗位，378k薪资，虽有挑战，但你有实力，定能闯出一片天！</p><hr><p>在北京,人工智能行业以平均年薪<strong>400k</strong>的高薪,<strong>经验不限</strong>的要求,让无数人心生向往。尽管如此,本科学历只是<strong>入行地板砖</strong>,稳妥些确实得硕士学历.但长远来看,AI行业是一个不断发展的增量市场,它注定要成为推动社会变革的新质生产力,你<strong>准备好迎接这个崭新的时代了吗</strong>?</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/04/18/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/"/>
    <url>/2024/04/18/%E5%9B%BE%E7%89%87%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h2 id="！图片拼命加载中"><a href="#！图片拼命加载中" class="headerlink" title="！图片拼命加载中"></a>！<a href="/images/genk.jpg">图片拼命加载中</a></h2><h2 id="title-图片测试date-2024-04-18-21-54-40tags"><a href="#title-图片测试date-2024-04-18-21-54-40tags" class="headerlink" title="title: 图片测试date: 2024-04-18 21:54:40tags:"></a>title: 图片测试<br>date: 2024-04-18 21:54:40<br>tags:</h2><h2 id="美丽的图片"><a href="#美丽的图片" class="headerlink" title="美丽的图片"></a>美丽的图片</h2>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>My Gallery</title>
    <link href="/2024/04/18/My-Gallery/"/>
    <url>/2024/04/18/My-Gallery/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello Linux</title>
    <link href="/2024/04/15/hello-linux/"/>
    <url>/2024/04/15/hello-linux/</url>
    
    <content type="html"><![CDATA[<p>Linux在开发中非常常用，一起来学习一下Linux常用的命令吧</p><h2 id="基本格式"><a href="#基本格式" class="headerlink" title="基本格式"></a>基本格式</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">格式</span><br>命令名 [-选项] [参数]# 有些命令要选项和参数, 有些不需要. 这里的[]表示可选项. <br></code></pre></td></tr></table></figure><h2 id="文件目录操作"><a href="#文件目录操作" class="headerlink" title="文件目录操作"></a>文件目录操作</h2><h4 id="2-ls命令"><a href="#2-ls命令" class="headerlink" title="2.ls命令"></a>2.ls命令</h4> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">ls</span>命令, 来源于: list(列表)  即: 查看指定目录下所有的子级(不包括子级的子级)</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">格式</span><br>ls [-a -l -h] [Linux的路径]<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">参数解释</span><br>-a显示所有(包括隐藏的) all<br>-l以行的形式展示详细信息 line<br>-h以人性化的方式展示.   human<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">例如:</span> <br>ls# 查看当前目录的子级, 不包括隐藏.<br>ls /# 查看根目录(/)下的内容.<br>ls -a # 查看当前目录的子级, 包括隐藏.<br>ls -l# 以行的方式, 查看当前目录的子级. 简写形式: ll<br>ls -h# 以人性化的方式展示当前目录的内容, 但是: 无效果.<br>ls -lh# 行的方式, 人性化展示当前目录下的内容. 简写形式:  ll -h<br>ls -al# 以行的形式, 展示当前目录下所有子级(包括 隐藏)<br>ls -alh # 以行, 人性化的方式展示当前目录下所有子级(包括 隐藏)<br></code></pre></td></tr></table></figure><h4 id="3-cd命令"><a href="#3-cd命令" class="headerlink" title="3.cd命令"></a>3.cd命令</h4>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">cd</span>命令, 来源于: change directory, 改变目录</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">格式</span><br>cd 要切换到的目录的路径<br></code></pre></td></tr></table></figure><h4 id="4-pwd命令"><a href="#4-pwd命令" class="headerlink" title="4.pwd命令"></a>4.pwd命令</h4>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">来源于 Print Work Directory</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">格式</span><br>pwd # 查看当前所在的工作目录,  即: 当前在Linux的哪个路径下. <br></code></pre></td></tr></table></figure><h4 id="5-Linux中的路径写法"><a href="#5-Linux中的路径写法" class="headerlink" title="5.Linux中的路径写法"></a>5.Linux中的路径写法</h4>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">路径介绍</span><br>就是用来描述文件 或者 文件夹(目录)的路径的, 有: 绝对路径 和 相对路径两种写法.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">绝对路径</span><br>以 / 根目录开头.   <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">相对路径</span><br>默认是相对于当前路径来写的. <br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">例如: 当前目录是在 /aa/bb  如果相切换到 /aa/bb/cc目录, 有如下两种写法.</span><br>绝对路径:   cd /aa/bb/cc<br>相对路径:   cd cc<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">几个特殊的路径写法</span><br>./# 代表当前路径, 例如: 上述的 cd cc 还可以写成 cd ./cc<br>..# 代表上级路径<br>../..# 代表上上级路径<br>~# 代表: 回到家目录, root账号的家 /root,  其它账号的家 /home/账号名<br><span class="hljs-meta prompt_"># </span><span class="language-bash">语法糖, 可以直接写 <span class="hljs-built_in">cd</span> 也是回家命令.</span><br>-# 代表: 在最近的两个目录之间做切换.<br></code></pre></td></tr></table></figure><h4 id="6-mkdir命令"><a href="#6-mkdir命令" class="headerlink" title="6.mkdir命令"></a>6.mkdir命令</h4>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">来源于 make directory, 创建目录(文件夹)的.</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">格式</span><br>mkdir [-p] 文件夹路径# -p表示parent, 即: 父目录不存在, 也会自动创建.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">简单理解, 假设: 目前只有 /root/aa 文件夹</span><br>mkdir /root/aa/bb/cc# 报错, 因为不写-p, 只能创建单级文件夹.<br>mkdir -p /root/aa/bb/cc# 不报错, 加上-p可以创建多级目录.<br></code></pre></td></tr></table></figure><h4 id="7-文件相关"><a href="#7-文件相关" class="headerlink" title="7.文件相关"></a>7.文件相关</h4>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">touch</span>创建文件的.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">格式</span><br>touch 文件路径1 文件路径2...# 可以同时创建多个文件.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash"><span class="hljs-built_in">cat</span>查看文件内容的</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">格式</span><br>cat文件路径# 一次性查看文件所有内容, 如果内容较多, 会翻页, 只留最后一页.<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">more查看文件内容的, 可以分页查看.</span><br>more 文件路径# 以分页的形式查看文件内容.<br><span class="hljs-meta prompt_"># </span><span class="language-bash">空格向下翻一页</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">d  down的意思, 向下翻半页</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">enter 向下翻一行</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">b  back, 向上翻一页.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">q     quit, 表示退出.  也可以按下 ctrl + 字母C</span><br></code></pre></td></tr></table></figure><h2 id="文件和文件夹相关命令"><a href="#文件和文件夹相关命令" class="headerlink" title="文件和文件夹相关命令"></a>文件和文件夹相关命令</h2><h4 id="8-cp命令-来源于-copy单词-可以拷贝-文件-文件夹"><a href="#8-cp命令-来源于-copy单词-可以拷贝-文件-文件夹" class="headerlink" title="8.cp命令, 来源于 copy单词, 可以拷贝 文件, 文件夹"></a>8.cp命令, 来源于 copy单词, 可以拷贝 文件, 文件夹</h4>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"> # </span><span class="language-bash">格式</span><br>cp [-r] 数据源 目的地# -r表示recursive(递归), 即: 拷贝文件夹时, 要写. <br>cp -r /root/aa /root/test<br><br>[root@linxkon ~]# cd /root/<br>[root@linxkon ~]# ls<br>2.avi  3.jpg  4.mp3  aa  anaconda-ks.cfg  a.txt<br>[root@linxkon ~]# mkdir lk<br>[root@linxkon ~]# <br>[root@linxkon ~]# cp a.txt lk# 拷贝<br>[root@linxkon ~]# ls<br>2.avi  3.jpg  4.mp3  aa  anaconda-ks.cfg  a.txt  lk<br>[root@linxkon ~]# ls lk/<br>a.txt<br>[root@linxkon ~]# <br>[root@linxkon ~]# cp 2.avi lk/abc.avi# 拷贝, 并改名<br>[root@linxkon ~]# ls lk/<br>abc.avi  a.txt<br>[root@linxkon ~]# cp aa lk# 报错, 拷贝文件夹必须夹-r, 递归拷贝.<br>cp: 略过目录&quot;aa&quot;<br>[root@linxkon ~]# cp -r aa lk# 拷贝文件夹<br>[root@linxkon ~]# ls lk/<br>aa  abc.avi  a.txt<br></code></pre></td></tr></table></figure><h4 id="9-mv（move）剪切移动-重命名"><a href="#9-mv（move）剪切移动-重命名" class="headerlink" title="9.mv（move）剪切移动&#x2F;重命名"></a>9.mv（move）剪切移动&#x2F;重命名</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">格式</span><br>mv 数据源 目的地# 注意: 如果是同级路径, 就是改名.<br><br>[root@linxkon ~]# ls<br>2.avi  3.jpg  4.mp3  aa  anaconda-ks.cfg  a.txt  lk<br>[root@linxkon ~]# ls lk/<br>aa  abc.avi  a.txt<br>[root@linxkon ~]# <br>[root@linxkon ~]# mv 3.jpg lk/# 剪切文件<br>[root@linxkon ~]# ls lk/<br>3.jpg  aa  abc.avi  a.txt<br>[root@linxkon ~]# ls<br>2.avi  4.mp3  aa  anaconda-ks.cfg  a.txt  lk<br>[root@linxkon ~]# <br>[root@linxkon ~]# <br>[root@linxkon ~]# mv 4.mp3 lk/好日子.xyz# 剪切(文件)并改名<br>[root@linxkon ~]# ls<br>2.avi  aa  anaconda-ks.cfg  a.txt  lk<br>[root@linxkon ~]# ls lk/<br>3.jpg  aa  abc.avi  a.txt  好日子.xyz<br><br>[root@linxkon ~]# mkdir xyz<br>[root@linxkon ~]# ls<br>2.avi  aa  anaconda-ks.cfg  a.txt  lk  xyz<br>[root@linxkon ~]# mv aa xyz# 剪切文件夹, 无需加: -r<br>[root@linxkon ~]# ls<br>2.avi  anaconda-ks.cfg  a.txt  lk  xyz<br>[root@linxkon ~]# ls xyz/<br>aa<br><br><br>[root@linxkon ~]# ls<br>[root@linxkon ~]# touch 1.txt<br>[root@linxkon ~]# <br>[root@linxkon ~]# mv 1.txt abc.txt# 改名操作<br>[root@linxkon ~]# ls<br>abc.txt<br></code></pre></td></tr></table></figure><h4 id="10-rm命令-来源于-remove单词-可以删除-文件-文件夹"><a href="#10-rm命令-来源于-remove单词-可以删除-文件-文件夹" class="headerlink" title="10.rm命令, 来源于 remove单词, 可以删除 文件, 文件夹"></a>10.rm命令, 来源于 remove单词, 可以删除 文件, 文件夹</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">rm [-r -f] 要删除的文件或者文件夹路径# -r:递归,  -f: force(强制)<br><br>[root@linxkon ~]# rm -rf lk# 强制删除 lk文件夹, 且不询问<br>[root@linxkon ~]# ls<br>anaconda-ks.cfg  xyz<br>[root@linxkon ~]# touch 1.txt 2.txt 3.avi 4.avi 5.jpg<br>[root@linxkon ~]# ls<br>1.txt  2.txt  3.avi  4.avi  5.jpg  anaconda-ks.cfg  xyz<br>[root@linxkon ~]# rm -rf *.txt<br>[root@linxkon ~]# ls<br>3.avi  4.avi  5.jpg  anaconda-ks.cfg  xyz<br>[root@linxkon ~]# rm -rf *# 清空当前文件夹<br>[root@linxkon ~]# ls<br>[root@linxkon ~]# rm -rf /*  ^C# 慎用<br></code></pre></td></tr></table></figure><h4 id="11-一个坐牢命令"><a href="#11-一个坐牢命令" class="headerlink" title="11.一个坐牢命令"></a>11.一个坐牢命令</h4><figure class="highlight shell"><figcaption><span>rm -rf</span><a href="/*">link</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rm -rf /* #删除系统<br></code></pre></td></tr></table></figure><h2 id="查找命令"><a href="#查找命令" class="headerlink" title="查找命令"></a>查找命令</h2>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">### 12.which命令,  查找Linux可执行命令 的路径的.</span></span> <br>  which ls# /usr/bin/ls<br>  which pwd# /usr/bin/pwd<br>  <br>  which ifconfig# /usr/sbin/ifconfig<br>  <br><span class="hljs-meta prompt_">  </span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"><span class="hljs-comment">### 13.find命令, 根据文件名, 或者 文件大小查找指定文件.</span></span><br><span class="hljs-meta prompt_">  # </span><span class="language-bash">格式</span><br>  find 要被检索的目录路径 -name &#x27;要检索的文件名&#x27;<br>  <br>  find / -name &#x27;abc*&#x27;# 查找Linux中, 以abc开头的内容.<br>  <br><span class="hljs-meta prompt_">  # </span><span class="language-bash">格式</span><br>  find 要被检索的目录路径 -size +100M# 超过100MB,  -10K, 小于10KB<br>  <br>  find / -size +100M# 查找Linux中, 文件大小超过100M的文件.<br></code></pre></td></tr></table></figure><p>—————————————————华丽的分割线—————————————————</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/04/14/hello-world/"/>
    <url>/2024/04/14/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>SQL之DQL详解</title>
    <link href="/2022/03/18/SQL%E4%B9%8BDQL%E8%AF%A6%E8%A7%A3/"/>
    <url>/2022/03/18/SQL%E4%B9%8BDQL%E8%AF%A6%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<p><img src="/images/00194-3462269573.jpeg"></p><table><thead><tr class="header"><th><h3 id="基础查询">基础查询</h3></th><th></th></tr></thead><tbody><tr class="odd"><td>Select * from 数据表;</td><td>查看所有数据</td></tr><tr class="even"><td>Select 字段1,字段2 from 数据表;</td><td>查看字段</td></tr><tr class="odd"><td>select 地段名 as 字段别名 from 数据表;</td><td>别名查询</td></tr><tr class="even"><td>select distinct 地段名 from 数据表;</td><td>去重查询</td></tr><tr class="odd"><td><h3 id="运算符筛选">运算符筛选</h3></td><td></td></tr><tr class="even"><td>select * from 表名 where 字段名 = '字段值';</td><td>筛选某字段值的行信息</td></tr><tr class="odd"><td>select * from 表名 where 字段名 != '字段值';</td><td>筛选不含某字段值的行信息</td></tr><tr class="even"><td>select * from 表名 where 字段名 &gt; 字段值;</td><td>筛选显示大于字段值的行</td></tr><tr class="odd"><td>select * from 表名 where 字段名 in (a,b);</td><td>筛选显示包含a,b值的行</td></tr><tr class="even"><td>select * from 表名 where 字段名 <strong>between</strong> 20 <strong>and</strong> 80;</td><td>筛选显示介于20 - 80之间的行</td></tr><tr class="odd"><td>select * from 表名 where 字段名=a <strong>and</strong> 字段名&gt;b;</td><td>交集条件</td></tr><tr class="even"><td>select * from 表名 where 字段名=a <strong>or</strong> 字段名&gt;b;</td><td>并集条件</td></tr><tr class="odd"><td>select * from 表名 where 字段名 like '_值%';</td><td>近似查询,_占位符,%任意字符</td></tr><tr class="even"><td>select * from 表名 where 字段名 is null;</td><td>空字段查询</td></tr><tr class="odd"><td>select * from 表名 where 字段名 is not null;</td><td>非空字段查询</td></tr><tr class="even"><td><h3 id="排序">排序</h3></td><td></td></tr><tr class="odd"><td>select * from 表名 order by 字段名 asc | desc;</td><td>排序</td></tr><tr class="even"><td>select * from 表名 order by 字段名1 asc,字段名2 desc</td><td>多重排序</td></tr><tr class="odd"><td><h3 id="聚合与分组">聚合与分组</h3></td><td></td></tr><tr class="even"><td><p>select 聚合函数 from 表名 where 字段名xxx;</p><p>聚合函数为:count(),max(),min(),sum(),avg()</p><p>xxx为筛选条件</p></td><td>相关条件值下的统计值</td></tr><tr class="odd"><td><p></p><p>select</p><p>  <strong>分组字段</strong>, 聚合函数(<strong>count(*)</strong>)...</p><p>from</p><p>  数据表名</p><p>where</p><p>  组前筛选</p><p><strong>group by</strong></p><p>  <strong>分组字段</strong></p><p>having</p><p>  组后筛选;</p></td><td><p>分组查询</p><p>一般结合聚合函数一起用, 否则: 无意义</p><p></p><p>where: 组前筛选, 后边不能跟: 聚合函数.</p><p>having: 组后筛选, 后边可以跟: 聚合函数.</p></td></tr><tr class="even"><td><h3 id="分页查询">分页查询</h3></td><td></td></tr><tr class="odd"><td><p>select * from 表名 limit 起始索引, 数据条数;</p><p>注:索引从0开始,从0开始则0可以省略不写</p><p>经验:总页数:=(总条数 + 每页的数据条数 - 1) // 每页的数据条数</p></td><td>分页查询较为常用,有效减少服务器/用户压力</td></tr><tr class="even"><td><h3 id="重分类查询">重分类查询</h3></td><td></td></tr><tr class="odd"><td><p>select case</p><p>when 条件1 then 重命名值</p><p>when 条件2 then 重命名值2</p><p>.....</p><p>else 重命名值3</p><p>end as 字段名,</p><p>from 数据表</p></td><td></td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>SQL</tag>
      
      <tag>查询语句</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
